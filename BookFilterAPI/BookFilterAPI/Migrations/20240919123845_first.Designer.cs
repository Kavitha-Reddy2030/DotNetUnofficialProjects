// <auto-generated />
using System;
using BookFilterAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookFilterAPI.Migrations
{
    [DbContext(typeof(BookFilterDbContext))]
    [Migration("20240919123845_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookFilterAPI.Models.Domain.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c906e0f8-0a71-40f1-b4c7-9f9f3bdd7cf7"),
                            Bio = "Bio of New Author 1.",
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "New Author 1",
                            ProfileImageUrl = "https://example.com/images/new_author_1.jpg"
                        },
                        new
                        {
                            Id = new Guid("3ef4e266-20d0-432e-89ff-ad60c9b5ff78"),
                            Bio = "Bio of New Author 2.",
                            Birthdate = new DateTime(1985, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "New Author 2",
                            ProfileImageUrl = "https://example.com/images/new_author_2.jpg"
                        },
                        new
                        {
                            Id = new Guid("e62092c5-8856-4906-a686-98e5434c7fc8"),
                            Bio = "British author, best known for the Harry Potter series.",
                            Birthdate = new DateTime(1965, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "J.K. Rowling",
                            ProfileImageUrl = "https://example.com/images/jk_rowling.jpg"
                        },
                        new
                        {
                            Id = new Guid("0b8ea859-2a6b-40fa-abb8-ddad2edba051"),
                            Bio = "American author, known for the 'A Song of Ice and Fire' series.",
                            Birthdate = new DateTime(1948, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "George R.R. Martin",
                            ProfileImageUrl = "https://example.com/images/george_rr_martin.jpg"
                        });
                });

            modelBuilder.Entity("BookFilterAPI.Models.Domain.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookSizeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoverImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookSizeId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8c52296-051c-4afe-b6b9-d43db1a42781"),
                            AuthorId = new Guid("c906e0f8-0a71-40f1-b4c7-9f9f3bdd7cf7"),
                            BookSizeId = new Guid("a056b77e-f6b4-4c85-9948-54fa570f7c24"),
                            CoverImageUrl = "https://example.com/images/new_book_1.jpg",
                            Description = "Description for New Book 1.",
                            PublicationDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "New Book 1"
                        },
                        new
                        {
                            Id = new Guid("827662ca-0989-45cf-b063-3aea16c1acbd"),
                            AuthorId = new Guid("3ef4e266-20d0-432e-89ff-ad60c9b5ff78"),
                            BookSizeId = new Guid("ce3a9bdb-c1b2-4ce1-9313-0a4bd8a7a183"),
                            CoverImageUrl = "https://example.com/images/new_book_2.jpg",
                            Description = "Description for New Book 2.",
                            PublicationDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "New Book 2"
                        },
                        new
                        {
                            Id = new Guid("14ec2ced-0b14-4c55-8c8e-76c408c326dd"),
                            AuthorId = new Guid("e62092c5-8856-4906-a686-98e5434c7fc8"),
                            BookSizeId = new Guid("5b78e4b7-c0d7-4840-b985-c0445c38f2d0"),
                            CoverImageUrl = "https://example.com/images/harry_potter_1.jpg",
                            Description = "First book in the Harry Potter series.",
                            PublicationDate = new DateTime(1997, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Harry Potter and the Philosopher's Stone"
                        },
                        new
                        {
                            Id = new Guid("c47a2160-8c0e-459e-8efe-44de15f1dc07"),
                            AuthorId = new Guid("0b8ea859-2a6b-40fa-abb8-ddad2edba051"),
                            BookSizeId = new Guid("9872312a-5fc7-4c3d-9ffe-c2def97b2856"),
                            CoverImageUrl = "https://example.com/images/game_of_thrones.jpg",
                            Description = "First book in the A Song of Ice and Fire series.",
                            PublicationDate = new DateTime(1996, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "A Game of Thrones"
                        });
                });

            modelBuilder.Entity("BookFilterAPI.Models.Domain.BookSize", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BookSizes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a056b77e-f6b4-4c85-9948-54fa570f7c24"),
                            Size = "Extra Small"
                        },
                        new
                        {
                            Id = new Guid("ce3a9bdb-c1b2-4ce1-9313-0a4bd8a7a183"),
                            Size = "Extra Large"
                        },
                        new
                        {
                            Id = new Guid("2b719459-a057-46e8-8390-953b11a6afda"),
                            Size = "Small"
                        },
                        new
                        {
                            Id = new Guid("5b78e4b7-c0d7-4840-b985-c0445c38f2d0"),
                            Size = "Medium"
                        },
                        new
                        {
                            Id = new Guid("9872312a-5fc7-4c3d-9ffe-c2def97b2856"),
                            Size = "Large"
                        });
                });

            modelBuilder.Entity("BookFilterAPI.Models.Domain.Book", b =>
                {
                    b.HasOne("BookFilterAPI.Models.Domain.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookFilterAPI.Models.Domain.BookSize", "BookSize")
                        .WithMany()
                        .HasForeignKey("BookSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("BookSize");
                });
#pragma warning restore 612, 618
        }
    }
}
